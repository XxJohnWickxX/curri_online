{"version":3,"sources":["icon_software.png","components/Main.js","components/Social.js","components/About.js","components/Sidebar.js","components/Info.js","styled/H2styled.js","styled/H3styled.js","styled/Pstyled.js","components/Educacion.js","components/Experiencia.js","components/Certificaciones.js","components/Habilidades.js","hooks/useGetData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainStyled","styled","div","MainContainer","Main","children","SocialStyled","SocialUl","ul","SocialLi","li","SocialAnchor","a","SocialIcon","i","props","theme","color","facebook","linkedin","github","whatsapp","Social","porps","social","map","item","index","key","href","url","target","name","className","Aboutstyled","AboutAvatar","AboutImg","img","AboutName","AboutH2","h2","AboutProfession","p","AboutBio","AboutLocation","About","avatar","profession","bio","address","src","alt","Sidebar","Info","StyledH2","H2styled","StyledH3","H3styled","StyledP","Pstyled","Educacion","data","edu","degree","institution","startDate","endDate","description","Experiencia","exp","jobTitle","company","jobDescription","Certificaciones","cer","date","HabiContainer","HabiH5","h5","HabiLine","move","keyframes","HabiSpan","span","width","Habilidades","skill","percentage","useGetData","useState","myData","setData","useEffect","fetch","then","response","json","GlobalStyle","createGlobalStyle","rotate","Rotate","App","console","log","length","spinn","education","experience","certificate","skills","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a5a1393.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon_software.8345ba3b.png\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst MainStyled = styled.div`\n    display: grid;\n    grid-template-columns: minmax(auto, 1024px);\n    justify-content: center;\n    padding: 1em;\n`;\n\nconst MainContainer = styled.div`\n   display: grid;\n   grid-template-columns: 1fr 3fr;\n   grid-gap: 2rem;\n   grid-row-gap: 0.05em;\n   \n   @media only screen and (max-width: 767px){\n    grid-template-columns: 1fr;\n   }\n`;\n\nconst Main = ({ children }) => (\n    <MainStyled>\n        <MainContainer>\n            {children}\n        </MainContainer>\n    </MainStyled>\n            \n    );\n\nexport default Main;","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\n\nconst SocialStyled = styled.div`\n    margin:0 auto;\n    display: block\n`;\n\nconst SocialUl= styled.ul`\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n`;\nconst SocialLi = styled.li`\n    display: inline;\n    margin: 0 1em 0 0;\n`;\n\nconst SocialAnchor = styled.a`\n    color: #212121;\n    text-decoration: none;\n    font-size: 1.2em;\n`;\n \nconst SocialIcon = styled.i`\n    color: ${props => props.theme.color}\n`;\n\nconst facebook = {\n    color: \"#3b5998\"\n}\n\nconst linkedin = {\n    color: \"#0e76a8\"\n}\n\nconst github = {\n    color: \"#333\"\n}\nconst whatsapp = {\n    color: \"#25d366\"\n}\n\n\nconst getColor = (name) => {\n    if(name === 'facebook') return facebook;\n    if(name === 'linkedin') return linkedin;\n    if(name === 'github') return github;\n    if(name === 'whatsapp') return whatsapp;\n    \n}\n\n\nconst Social = porps => (\n    <SocialStyled>\n        {porps.social && \n            <SocialUl>\n                {porps.social.map((item, index) => (\n                    <SocialLi key={`Social-${index}`}>\n                        <SocialAnchor href={item.url} target = \"_blank\">\n                            <ThemeProvider theme={getColor(item.name)}>\n                            <SocialIcon className={`fa fa-${item.name}`} />\n                            </ThemeProvider>\n                        </SocialAnchor>\n                    </SocialLi>\n                ))}\n            </SocialUl>\n        }\n    </SocialStyled>\n)\n            \nexport default Social;","import React from 'react';\nimport Social from './Social'\nimport styled from 'styled-components';\n\nconst Aboutstyled = styled.div`\n    text-align: center;\n`; \n\nconst AboutAvatar = styled.div`\n    padding: 2em 0 0 0;\n`;\n\nconst AboutImg = styled.img`\n    border-radius: 100%;\n    width: 160px;\n    height: 160px;\n    border: 2px solid #E86433;\n    margin: 0 auto;\n    display: block;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.6);\n    transform: rotate(90deg)\n`;\n\nconst AboutName = styled.div`\n    text-align: center;\n`;\n\nconst AboutH2 = styled.h2`\n    font-family: 'Roboto', sans-serif;\n    font-weight: 400;\n    letter-spacing: 1.2px;\n    margin: .5em 0 0 0;\n    color: #E86433;\n`;\n\nconst AboutProfession = styled.p`\n    margin: .2em 0 1em 0;\n    letter-spacing: 1.6px;\n    font-weight: 300;\n    color: #FF9445;\n`;\n\nconst AboutBio = styled.p`\n    color: #757575;\n    font-size: 1em;\n    font-weight: 300;\n`;\n\nconst AboutLocation = styled.p`\n    color: #757575;\n    font-size: 1em;\n    font-weight: 400;\n`;\n\nconst About = ({ avatar, name, profession, bio, address, social}) => (\n    <Aboutstyled>\n        <div className=\"About-container\">\n            <AboutAvatar>\n                <figure>\n                    <AboutImg src={avatar} alt={name} />\n                </figure>\n            </AboutAvatar>\n            <AboutName>\n                <AboutH2>{name}</AboutH2>\n            </AboutName>\n            <div className=\"About-profession\">\n                <AboutProfession>{profession}</AboutProfession>\n            </div>\n            <div className=\"About-descripcion\">\n                <AboutBio>{bio}</AboutBio>\n            </div>\n            <div className=\"About-location\">\n                <AboutLocation>{address}</AboutLocation>\n            </div>\n            <div className=\"About-social\">\n                <Social \n                    social={social}\n                />\n            </div>\n        </div>\n    </Aboutstyled>\n    );\n\nexport default About;","import React from 'react';\n\nconst Sidebar = ({ children }) => (\n    <div className=\"Sidebar\">\n        <div className=\"Sidebar-container\">\n            {children}\n        </div>\n    </div>            \n    );\n\nexport default Sidebar;","import React from 'react';\n\nconst Info = ({ children }) => (\n    <div className=\"Info\">\n        <div className=\"Info-container\">\n            {children}\n        </div>\n    </div>\n    );\n\nexport default Info;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledH2 = styled.h2`\n    font-family: 'Roboto', sans-serif;\n    font-weight: 300;\n    margin: 1em 0 0 0;\n    color: #FF9445;\n`;\n\nconst H2styled = ({ name }) => <StyledH2>{name}</StyledH2>;\n\nexport default H2styled;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledH3 = styled.h2`\n    font-weight: 400;;\n    margin: .5em 0;\n    color: #212121;\n`;\n\nconst H3styled = ({ children }) => <StyledH3>{children}</StyledH3>;\n\nexport default H3styled;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledP= styled.h2`\n    color: #757575;\n    font-weight: 300;\n    margin: .5em 0 1.2em 0;\n`;\n\nconst Pstyled = ({ children }) => <StyledP>{children}</StyledP>;\n\nexport default Pstyled;","import React from 'react';\nimport H2styled from '../styled/H2styled';\nimport H3styled from '../styled/H3styled';\nimport Pstyled from '../styled/Pstyled';\n\nconst Educacion = props => (\n    <div className=\"Educacion\">\n        <H2styled name=\"Educación\" />  <hr/>\n        <div className=\"Educacion-container\">\n            {props.data.map((edu, index) => (\n                <div className=\"Edicacion-item\" key={`Edu-${index}`}>\n                    <H3styled>{edu.degree} @ {edu.institution} <br/> <span>{edu.startDate} a {edu.endDate}</span> </H3styled>\n                    <Pstyled>{edu.description}</Pstyled>\n                </div>\n            ))}\n        </div>\n    </div>\n    );\n\nexport default Educacion;","import React from 'react';\nimport H2styled from '../styled/H2styled';\nimport H3styled from '../styled/H3styled';\nimport Pstyled from '../styled/Pstyled';\n\nconst Experiencia = props => (\n    <div className=\"Experiencia\">\n        <H2styled name=\"Experiencia\"/> <hr/>\n        <div className=\"Experiencia-container\">\n            {props.data.map((exp, index) => (\n                 <div className=\"Experiencia-item\" key={`Exp-${index}`}>\n                    <H3styled>{exp.jobTitle} @ {exp.company} <br/> <span>{exp.startDate} a {exp.endDate}</span></H3styled>\n                    <Pstyled>{exp.jobDescription}</Pstyled>\n                </div>\n            ))}\n        </div>\n    </div>\n    );\n\nexport default Experiencia;","import React from 'react';\nimport H2styled from '../styled/H2styled';\nimport H3styled from '../styled/H3styled';\nimport Pstyled from '../styled/Pstyled';\n\nconst Certificaciones = props => (\n    <div className=\"Certificaciones\"> \n        <H2styled name=\"Certificaciones\" /> <hr/>\n        <div className=\"Certificaciones-coantainer\">\n            {props.data.map((cer, index) => (\n                <div className=\"Certificaciones-item\" key={`Cer-${index}`}>\n                    <H3styled>{cer.name} @ {cer.institution} <br/> <span>{cer.date}</span></H3styled>\n                    <Pstyled>{cer.description}</Pstyled>\n                </div>\n            ))}\n        </div>\n    </div>\n    );\n\nexport default Certificaciones;","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport H2styled from '../styled/H2styled';\n\nconst HabiContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 2rem;\n    grid-row-gap: 0.5.em;\n`;\n\nconst HabiH5 = styled.h5`\n    margin: .5em 0;\n`;\n\nconst HabiLine = styled.div`\n    height: 8px;\n    position: relative;\n    border-radius: 50px;\n    background: #FF9445;\n`;\n\nconst move = keyframes`\n    0% { background-position: 0 0;}\n    100% { background-position: 50px 50px;}\n`;\n\nconst HabiSpan = styled.span`\n    display: block;\n    height: 100%;\n    width: ${props => props.width};\n    border-radius: 8px;\n    background-color: #E86433;\n    overflow: hidden;\n    position: relative;\n    box-shadow: inset 0 2px 9px rgba(255,255,255,0.3), inset 0 -2px 6px rgba(0,0,0,0.4);\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        background-image: linear-gradient(-45deg, rgba(255,255,255,0.2) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.2) 50%, rgba(255,255,255,0.2) 75%, transparent 75%, transparent);\n        z-index: 1;\n        background-size: 50px 50px;\n        animation: ${move} 4s linear infinite;\n        overflow: hidden;\n    }\n`;\n\n\nconst Habilidades = props => (\n    <div className = \"Habilidades\"> \n        <H2styled name=\"Habilidades\"/> <hr/>\n        <HabiContainer>\n            {props.data.map((skill, index) => (\n                <div className=\"Habilidades-item\" key={`Skill-${index}`}>\n                    <HabiH5>{skill.name}</HabiH5>\n                    <HabiLine>\n                        <HabiSpan width={skill.percentage}/>\n                    </HabiLine>\n                </div>\n            ))}\n        </HabiContainer>\n    </div>\n            \n    );\n\nexport default Habilidades;","import { useState, useEffect } from 'react';\n\nconst api = 'https://us-central1-api-cv-d7490.cloudfunctions.net/api'\n\nconst useGetData = () => {\n\n    const [myData, setData] = useState([]);\n\n    useEffect(() => {\n        fetch(api)\n        .then(response => response.json())\n        .then(data => setData(data))\n    }, [])\n\n    return myData;\n}\n\nexport default useGetData;","import React from 'react';\nimport Main from './components/Main';\nimport About from './components/About';\nimport Sidebar from './components/Sidebar';\nimport Info from './components/Info';\nimport Educacion from './components/Educacion';\nimport Experiencia from './components/Experiencia';\nimport Certificaciones from './components/Certificaciones';\nimport Habilidades from './components/Habilidades';\nimport useGetData from '../src/hooks/useGetData';\nimport styled, { createGlobalStyle, keyframes } from 'styled-components';\nimport spinn from '../src/icon_software.png'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Lato', sans-serif;\n    margin: 0;\n    padding: 0;\n    background: #f5f5f5;\n  }\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Rotate = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  animation: ${rotate} 2s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 1.2rem;\n`;\n\n\n\nconst App = () => {\n  \n  const data = useGetData()\n  console.log(data);\n  \n    return data.length === 0 ? \n    <Rotate> \n      <img src={spinn} alt=\"\"/> \n    </Rotate>  : (\n\n         <Main>\n          <GlobalStyle />\n            <Sidebar>\n              <About \n                avatar = {data.avatar}\n                name = {data.name}\n                profession = {data.profession}\n                bio = {data.bio}\n                address = {data.address}\n                social = {data.social}             \n              />\n            </Sidebar>\n            <Info>\n              <Educacion \n                data = {data.education}\n              />\n              <Experiencia \n                data = {data.experience}\n              />\n              <Certificaciones \n                data = {data.certificate}\n              />\n              <Habilidades \n                data = {data.skills}\n              /> \n            </Info>\n\n        </Main>\n    )\n}\n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}